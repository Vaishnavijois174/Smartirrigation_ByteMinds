#include <Arduino.h>
#include <ESP8266WiFi.h>
#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BME280.h>

// Replace these with your network credentials
const char *ssid = "your-SSID";
const char *password = "your-PASSWORD";

// Replace this with your OpenWeatherMap API key
const char *apiKey = "your-OPENWEATHERMAP-API-KEY";

// OpenWeatherMap server details
const char *server = "api.openweathermap.org";
const char *location = "cityname, countrycode";
const String apiEndpoint = "/data/2.5/weather?q=" + String(location) + "&appid=" + String(apiKey);

// PIR sensor
const int pirPin = D1;

// BME280 sensor (optional)
Adafruit_BME280 bme;

void setup() {
  Serial.begin(115200);

  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");

  // Initialize the PIR sensor
  pinMode(pirPin, INPUT);

  // Initialize the BME280 sensor (optional)
  if (!bme.begin(0x76)) {
    Serial.println("Could not find a valid BME280 sensor, check wiring!");
    while (1);
  }
}

void loop() {
  // Check for motion using PIR sensor
  int motion = digitalRead(pirPin);

  if (motion == HIGH) {
    Serial.println("Motion detected!");

    // Fetch and display weather information
    getWeather();
  }

  delay(500);
}

void getWeather() {
  Serial.println("Fetching weather data...");

  // Create a TCP/IP client to connect to OpenWeatherMap
  WiFiClient client;

  if (client.connect(server, 80)) {
    Serial.println("Connected to OpenWeatherMap");

    // Make an HTTP request
    client.print(String("GET ") + apiEndpoint + " HTTP/1.1\r\n" +
                 "Host: " + server + "\r\n" +
                 "Connection: close\r\n\r\n");

    // Wait for the response
    while (!client.available()) {
      delay(10);
    }

    // Read the response
    String response = "";
    while (client.available()) {
      char c = client.read();
      response += c;
    }

    // Print the response to the serial monitor
    Serial.println(response);

    // Extract and display relevant weather information (modify as needed)
    int startPos = response.indexOf("\"temp\":") + 7;
    int endPos = response.indexOf(",", startPos);
    String temperature = response.substring(startPos, endPos);
    Serial.print("Temperature: ");
    Serial.println(temperature + "Â°C");

    int startPosDesc = response.indexOf("\"description\":\"") + 15;
    int endPosDesc = response.indexOf("\"", startPosDesc);
    String description = response.substring(startPosDesc, endPosDesc);
    Serial.print("Description: ");
    Serial.println(description);
  } else {
    Serial.println("Connection to OpenWeatherMap failed");
  }

  // Close the connection
  client.stop();
}
